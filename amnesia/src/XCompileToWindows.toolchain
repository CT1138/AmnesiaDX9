# the name of the target operating system
set(CMAKE_SYSTEM_NAME Windows)

# which compilers to use for C and C++
# set(CMAKE_C_COMPILER   x86_64-w64-mingw32-gcc-win32)  # 64 bit but the windows version was made for 32 only
# set(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++-win32)  # 64 bit
set(CMAKE_C_COMPILER   i686-w64-mingw32-gcc-win32)
set(CMAKE_CXX_COMPILER i686-w64-mingw32-g++-win32)

# these shouldn't be necessary, in theory...
# add_compile_options(-m32)
# add_link_options(-m32)

# where the target environment is located
set(CMAKE_FIND_ROOT_PATH  /usr/i686-w64-mingw32/)


# Note: I set these to NEVER without a thorough understanding of what it does:

# adjust the default behavior of the FIND_XXX() commands:
# search programs in the host environment
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)

# search headers and libraries in the target environment
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY BOTH)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE BOTH)
